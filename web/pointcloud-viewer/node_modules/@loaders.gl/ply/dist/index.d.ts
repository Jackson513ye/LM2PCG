import type { PLYMesh } from "./lib/ply-types.js";
import type { PLYLoaderOptions } from "./ply-loader.js";
import { PLYLoader as PLYWorkerLoader } from "./ply-loader.js";
export type { PLYLoaderOptions };
export { PLYWorkerLoader };
/**
 * Loader for PLY - Polygon File Format
 */
export declare const PLYLoader: {
    readonly parse: (arrayBuffer: ArrayBuffer, options: PLYLoaderOptions | undefined) => Promise<PLYMesh>;
    readonly parseTextSync: (arrayBuffer: string, options: PLYLoaderOptions | undefined) => PLYMesh;
    readonly parseSync: (arrayBuffer: ArrayBuffer, options: PLYLoaderOptions | undefined) => PLYMesh;
    readonly parseInBatches: (arrayBuffer: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>, options: PLYLoaderOptions | undefined) => AsyncIterable<PLYMesh>;
    readonly dataType: PLYMesh;
    readonly batchType: never;
    readonly name: "PLY";
    readonly id: "ply";
    readonly module: "ply";
    readonly version: any;
    readonly worker: true;
    readonly extensions: ["ply"];
    readonly mimeTypes: ["text/plain", "application/octet-stream"];
    readonly text: true;
    readonly binary: true;
    readonly tests: ["ply"];
    readonly options: {
        readonly ply: {};
    };
};
//# sourceMappingURL=index.d.ts.map